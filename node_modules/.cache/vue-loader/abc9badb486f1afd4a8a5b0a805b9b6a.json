{"remainingRequest":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/ts/vue-ts-demo/src/components/Card.vue?vue&type=style&index=0&id=54cdc180&scoped=true&lang=css&","dependencies":[{"path":"/home/mi/XProjects/ts/vue-ts-demo/src/components/Card.vue","mtime":1564036304778},{"path":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/ts/vue-ts-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card-wrap {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 60%;\n  height: 60px;\n  background: #eff9f9;\n  border-bottom: 1px dotted #ccc;\n}\nspan.name {\n  width: 400px;\n  text-align: left;\n}\n",{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Card.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card-wrap\">\n    <span class=\"name\">{{item.name}}</span> <button class=\"status\" @click=\"handleChangeStatus(item.id)\">{{statusComputed}}</button> <button @click=\"handleDelTask(item.id)\">删除</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Emit } from 'vue-property-decorator'\nimport { TodoItem } from '../store'\n\n@Component\nexport default class Card extends Vue {\n  @Prop() private item!: TodoItem\n\n  @Emit('changeStatus')\n  // private changeStatus(id: number) {\n  //   return id\n  // }\n  private handleChangeStatus (id: number): void {\n    // this.changeStatus(id)\n  }\n\n  @Emit('delTask')\n  private handleDelTask (id: number): number {\n    return id\n  }\n\n  private get statusComputed (): any {\n    let _status: string = ''\n    switch (this.item.status) {\n      case 0: _status = '进行中'; break\n      case 1: _status = '已完成'; break\n      default: {\n        return\n      }\n    }\n    return _status\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .card-wrap {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 60%;\n    height: 60px;\n    background: #eff9f9;\n    border-bottom: 1px dotted #ccc;\n  }\n  span.name {\n    width: 400px;\n    text-align: left;\n  }\n</style>\n"]}]}